" @see https://github.com/scrooloose/vimfiles/blob/master/vimrc#L78
" @see https://github.com/powerline/powerline
" @see http://www.slant.co/topics/67/viewpoints/17/~what-are-the-best-programming-fonts~pragmata-pro
" @see https://github.com/xpando/Dash/blob/master/Fonts/PragmataPro.ttf
" @see http://ethanschoonover.com/solarized/vim-colors-solarized
" @see http://got-ravings.blogspot.com/2008/08/vim-pr0n-making-statuslines-that-own.html
" @see https://github.com/bling/vim-airline
" @see https://amix.dk/vim/vimrc.html
" @see https://www.linux.com/learn/vim-tips-working-external-commands
" : r ! ls -l
" %!sort

set nocompatible

" https://github.com/numirias/security/blob/master/doc/2019-06-04_ace-vim-neovim.md
"set nomodeline

" @see http://stackoverflow.com/questions/12814371/conversion-error-in-vim
" Try saving with :w ++enc=utf-8. Also, it's recommended to put scriptencoding utf-8 at the top of your .vimrc.
set encoding=utf8
scriptencoding utf-8

set incsearch
set ignorecase
set smartcase
set showmatch
set hlsearch

set ruler

" Letting DetectIndent handle this.
"set expandtab
set tabstop=4
set shiftwidth=4

" For phrack submissions. Yeah, right.
"set textwidth=75

" https://stackoverflow.com/questions/526858/how-do-i-make-vim-do-normal-bash-like-tab-completion-for-file-names
set wildmode=longest:full,full

filetype plugin on

execute pathogen#infect()

"set autochdir
set hidden
"set confirm

let loaded_matchparen = 1

if has("autocmd")
    " When editing a file, always jump to the last cursor position
    autocmd BufReadPost * if line("'\"") > 0 && line ("'\"") <= line("$") | exe "normal g'\"" | endif
endif

" Toggle between paste and no-paste mode.
nnoremap <F11> :set invpaste<CR> 
inoremap <F11> :set invpaste<CR>

" Insert date and time.
"nnoremap <F5> :=strftime("%F %T")<CR>P
"inoremap <F5> <C-R>=strftime("%F %T")<CR>

" Next/prev buffer switching.
noremap <F1>  :bprev<CR>
noremap <F2>  :bnext<CR>

" Clear all highligted search results.
"noremap <F8>  :nohl<CR>

" Toggle line numbers?
"noremap <F12> :set number!<CR>

" unmap <C-PageUp>
" unmap <C-PageDown>
" nnoremap <C-PageUp> :bprev<CR>
" nnoremap <C-PageDown>   :bnext<CR>
" inoremap <C-PageUp> <Esc>:bprev<CR>i
" inoremap <C-PageDown>   <Esc>:bnext<CR>i

:noremap <C-Left>  :bprev<CR> 
:noremap <C-Right> :bnext<CR> 

let g:no_italics = !!0
let g:no_italics = !empty($SSH_CLIENT) && !empty(matchstr($SSH_CLIENT, '^76\.180\.125\.'))

set t_Co=256
set t_ZH="^[[3m"
set t_ZR="^[[23m"

syntax enable
set background=dark
colorscheme fazigu
"colorscheme deveiate  ## horrible for perl
"colorscheme inkpot
"colorscheme gardener
"let g:solarized_termcolors=256 " If no solarized Xdefaults modifications.
"colorscheme solarized

set autoindent
set gfn="Consolas 10"

"set ttymouse=xterm
"set mouse=a

"set statusline=%<%f%h%m%r%=%b\ 0x%B\ \ %l,%c%V\ %P
"highlight StatusLineNC cterm=NONE ctermbg=DarkGray  ctermfg=LightGray
highlight StatusLine cterm=NONE ctermbg=DarkGray  ctermfg=LightGray
highlight User1      cterm=NONE ctermbg=LightGray ctermfg=Black
"   StatusLine is default window color.  Active window is difference between that
"   color and (in this case as per g:buftabs_active_highlight_group below) User1.
"set statusline="%#User1#%<%f%h%m%r%=Col\ %c\ Line\ %l/%L\ %P"
"set statusline="%#User1#%<%*1f%h%m%r%=Col\ %c\ Line\ %l/%L\ %P"
set statusline=%<%f%h%m%r%=Col\ %3c\ Line\ %4l/%4L\ (%-3P)
"set statusline=┌%{buftabs#statusline()}┐\ %<%f%h%m%r%=Col\ %3c\ Line\ %4l/%4L\ (%-3P)
set laststatus=2
"set cmdheight=2


" buftags plugin.
"  By default buftabs will take up the whole of the left-aligned section of
"  your statusline. You can alternatively specify precisely where it goes
"  using %{buftabs#statusline()} e.g.:
"set statusline=%=buffers:\ %{buftabs#statusline()}
"set statusline="%{buftabs#statusline()}\ %=\ Col\ %c\ Line\ %l/%L\ %P"
highlight BufTabActive   cterm=NONE ctermbg=Green     ctermfg=Black
highlight BufTabInactive cterm=NONE ctermbg=LightGray ctermfg=White
let g:buftabs_in_statusline=1
let g:buftabs_only_basename=1
let g:buftabs_active_highlight_group="User1"
"let g:buftabs_inactive_highlight_group="BufTabInactive"
"let g:buftabs_separator = ":«"
"let g:buftabs_separator = "┤ "
let g:buftabs_separator = ": "
"let g:buftabs_marker_start = "["
let g:buftabs_marker_start = "→"
"let g:buftabs_marker_end = "┌┤"
"let g:buftabs_marker_end = "»┐"
"let g:buftabs_marker_end = "]"
let g:buftabs_marker_end = "←"
let g:buftabs_marker_modified = "≠"

" →  ←  ±  ·  «  »  ≠  ‽ ₍  ₎  ╠  ╣  ├─  ─┤  ┌  ┐
"   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮
"   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│
"   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│
"   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤
"   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│
"   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│
"   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯


"" http://www.techrepublic.com/article/configure-vi-for-java-application-development/#
"" http://www.techrepublic.com/html/tr/sidebars/5054618-0.html
let java_highlight_all=1
let java_highlight_functions="style"
let java_allow_cpp_keywords=1

"" http://www.techrepublic.com/html/tr/sidebars/5054618-2.html
"set makeprg=vimAnt
"set efm=\ %#[javac]\ %#%f:%l:%c:%*\\d:%*\\d:\ %t%[%^:]%#:%m,
"    \%A\ %#[javac]\ %f:%l:\ %m,%-Z\ %#[javac]\ %p^,%-C%.%#

" ctags -f valuescore-main.tags --sort=yes -R
" /srv/code.adiant.com/valuescore/java/adserv*/src
" /srv/code.adiant.com/valuescore/java/common*/src
" /srv/code.adiant.com/valuescore/java/dmp/src/main/java/
"autocmd Filetype java set tags=/home/rons/.vim/tags/valuescore-main.tagsa

"set complete=.,w,b,u,t,i
"set omnifunc=syntaxcomplete#Complete

map <Leader>cc :cwindow<CR>:cc<CR><c-w>bz<CR><CR>
map <Leader>cn :cwindow<CR>:cn<CR><c-w>bz<CR><CR>
map <Leader>cp :cwindow<CR>:cp<CR><c-w>bz<CR><CR>

if has("multi_byte")
    if &termencoding == ""
        let &termencoding = &encoding
    endif
    set encoding=utf-8
    setglobal fileencoding=utf-8
    "setglobal bomb
    "set fileencodings=ucs-bom,utf-8,latin1

	digraph ?! 8253
	digraph !? 8253
    digraph .3 2026
elseif &encoding == "iso-8859-15"
 	digraph oe 189
endif

if has("conceal")
    set conceallevel=0 
    autocmd FileType json setlocal conceallevel=0 
endif 

" Doesn't work on all builds; need to find appropriate has() check?
"set clipboard=unnamedplus

" https://github.com/artur-shaik/vim-javacomplete2

autocmd FileType java setlocal omnifunc=javacomplete#Complete

" To add all missing imports with F6:

nmap <F6> <Plug>(JavaComplete-Imports-AddMissing)
imap <F6> <Plug>(JavaComplete-Imports-AddMissing)

" To remove all unused imports with F7:

nmap <F7> <Plug>(JavaComplete-Imports-RemoveUnused)
imap <F7> <Plug>(JavaComplete-Imports-RemoveUnused)

" Try to properly sort imports.

let g:JavaComplete_ImportOrder = ['java.', 'javax.', 'org.', 'com.']
let g:JavaComplete_ImportSortType = 'packageName'
" Put static at top, because that's how Eclipse does it by default.
let g:JavaComplete_StaticImportsAtTop = 1

"let g:JavaComplete_SourcesPath = 'zcs-shared/src/main/java:zcs-shared/src/test/java:zcs-dashboard/src/main/java:zcs-dashboard/src/test/java:zcs-signup/src/main/java:zcs-signup/src/test/java'

" @see https://stackoverflow.com/questions/1932604/vim-problem-with-gf-command
" @see https://stackoverflow.com/questions/52123349/vim-how-to-get-path-to-search-up-and-down-a-directory-tree
set path+=~/src/ZimbraOS/zm-cloudsuite-onboarding-api/zcs-dashboard/src/**
set path+=~/src/ZimbraOS/zm-cloudsuite-onboarding-api/zcs-shared/src/**
set path+=~/src/ZimbraOS/zm-cloudsuite-onboarding-api/zcs-signup/src/**

" Below _almost_ works, but vim doesn't recognize the inner wildcards.
"set path+=~/src/ZimbraOS/zm-cloudsuite-onboarding-api/zcs-*/src/*/java/**

set path+=~/src/openjdk-16/**
"set path+=~/go/src/**

set path+=~/src/Zimbra/zm-mailbox/*/src/**
set path+=~/src/ZimbraOS/zm-mailbox/*/src/**

" Using tabs for Java at Synacor.

autocmd FileType java setlocal expandtab

" Try autodetecting tabs or spaces.

"autocmd BufReadPost * :DetectIndent 
"let g:detectindent_preferred_expandtab = 1
"let g:detectindent_preferred_indent = 4

" Set listchars for `set list` mode.
set listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:␣

" Proper syntax highlighting for a Jenkinsfile.
au BufNewFile,BufRead Jenkinsfile setf groovy

" vim: filetype=vim:
